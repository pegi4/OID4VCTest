import { IssuerServerMetadata, TokenResponse, CredentialResponse } from '@blockchain-lab-um/oidc-types';
import { IPluginMethodMap, IAgentContext, IResolver, ICredentialIssuer, ICredentialVerifier } from '@veramo/core';
import { ICredentialIssuerEIP712 } from '@veramo/credential-eip712';
import { ICredentialIssuerLD } from '@veramo/credential-ld';
import { Result } from '../utils/result.js';
import { CreateAuthorizationRequestArgs, CreateAuthorizationRequestResponse, HandleAuthorizationResponseArgs, CreateCredentialOfferRequestArgs, CreateCredentialOfferRequestResposne, HandlePreAuthorizedCodeTokenRequestArgs, HandleCredentialRequestArgs, IsValidTokenRequestArgs, IsValidTokenRequestResponse, ProofOfPossesionArgs, ProofOfPossesionResponseArgs } from './internal.js';
import '../utils/detailedError.js';

interface IOIDCRPPlugin extends IPluginMethodMap {
    createAuthorizationRequest(args: CreateAuthorizationRequestArgs): Promise<Result<CreateAuthorizationRequestResponse>>;
    handleAuthorizationResponse(args: HandleAuthorizationResponseArgs, context: OIDCRPAgentContext): Promise<Result<boolean>>;
    handleIssuerServerMetadataRequest(): Promise<Result<IssuerServerMetadata>>;
    createCredentialOfferRequest(args: CreateCredentialOfferRequestArgs): Promise<Result<CreateCredentialOfferRequestResposne>>;
    handlePreAuthorizedCodeTokenRequest(args: HandlePreAuthorizedCodeTokenRequestArgs): Promise<Result<TokenResponse>>;
    handleCredentialRequest(args: HandleCredentialRequestArgs, context: OIDCRPAgentContext): Promise<Result<CredentialResponse>>;
    isValidTokenRequest(args: IsValidTokenRequestArgs): Promise<Result<IsValidTokenRequestResponse>>;
    proofOfPossession(args: ProofOfPossesionArgs, context: OIDCRPAgentContext): Promise<Result<ProofOfPossesionResponseArgs>>;
}
/**
 * Represents the requirements that this plugin has.
 * The agent that is using this plugin is expected to provide these methods.
 *
 * This interface can be used for static type checks, to make sure your application is properly initialized.
 *
 * @beta
 */
type OIDCRPAgentContext = IAgentContext<IResolver & Pick<ICredentialIssuer, 'createVerifiableCredential'> & ICredentialVerifier & ICredentialIssuerLD & ICredentialIssuerEIP712>;

export { IOIDCRPPlugin, OIDCRPAgentContext };
